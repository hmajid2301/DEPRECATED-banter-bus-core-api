image: node:14.17.5

stages:
  - pre
  - test
  - post

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  npm_config_cache: '$CI_PROJECT_DIR/.npm'

cache:
  key:
    files:
      - package-lock.json
  paths:
    - .npm

before_script:
  - npm ci --cache .npm --prefer-offline

.test:
  services:
    - name: mongo:4.4.4
      alias: banter-bus-database
    - name: registry.gitlab.com/banter-bus/banter-bus-gui:test
      alias: banter-bus-gui
    - name: registry.gitlab.com/banter-bus/banter-bus-management-api:test
      alias: banter-bus-management-api
    - name: registry.gitlab.com/banter-bus/banter-bus-tests/database-seed:latest
      alias: banter-bus-database-seed
  variables:
    BANTER_BUS_DB_HOST: 'banter-bus-database'
    BANTER_BUS_CORE_API_DATABASE_HOST: 'banter-bus-database'
    BANTER_BUS_WEBSERVER_PORT: 8090
    MONGO_INITDB_ROOT_USERNAME: 'banterbus'
    MONGO_INITDB_ROOT_PASSWORD: 'banterbus'
    MONGO_INITDB_DATABASE: 'banterbus'
    MONGO_HOSTNAME: banter-bus-database:27017
    BANTER_BUS_CORE_API_MANAGEMENT_API_URL: 'http://banter-bus-management-api'
    BANTER_BUS_CORE_API_MANAGEMENT_API_PORT: 8090
    FF_NETWORK_PER_BUILD: 1

install:dependencies:
  stage: pre
  only:
    - merge_request
    - main
  script:
    - npm ci
  cache:
    policy: pull-push
  artifacts:
    expire_in: 1h
    paths:
      - node_modules

publish-docker:test:
  stage: pre
  only:
    - main
  image: docker
  services:
    - docker:dind
  before_script: []
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -f Dockerfile -t ${CI_REGISTRY_IMAGE}:test --build-arg MODE=staging .
    - docker build -f Dockerfile -t ${CI_REGISTRY_IMAGE}:e2e --build-arg MODE=test .
    - docker push ${CI_REGISTRY_IMAGE}:test
    - docker push ${CI_REGISTRY_IMAGE}:e2e

lint:
  stage: test
  only:
    - merge_request
  script:
    - make lint

types:check:
  stage: test
  only:
    - merge_request
  script:
    - make types-check

format:
  stage: test
  only:
    - merge_request
  script:
    - make format

test:unit:
  stage: test
  only:
    - merge_request
  script:
    - make test-unit

test:integration:
  stage: test
  only:
    - merge_request
  extends:
    - .test
  script:
    - cp config.example.yml config.yml
    - make test-integration

coverage:
  stage: test
  only:
    - main
    - merge_request
  extends:
    - .test
  script:
    - cp config.example.yml config.yml
    - make coverage
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  artifacts:
    when: always
    reports:
      junit: junit.xml
      cobertura: cobertura-coverage.xml

trigger:e2e:tests:
  stage: post
  only:
    - main
  script:
    - curl -X POST -F token=$BANTER_BUS_TESTS_CI_TRIGGER_TOKEN  -F "variables[SOURCE_TRIGGER]=banter-bus-core-api" -F "variables[DEPLOY_COMMIT]=$CI_COMMIT_SHA" -F ref=main https://gitlab.com/api/v4/projects/28716097/trigger/pipeline
